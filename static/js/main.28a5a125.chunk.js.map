{"version":3,"sources":["mapStyles.js","MapModal/MapModalFunctionComponent.js","UsersFilter/UsersFilterClassComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MapStyles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","MapModal","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","defaultOptions","styles","isFiltered","users","map","user","position","parseFloat","address","geo","onClick","setClickedUser","icon","url","scaledSize","window","google","maps","Size","id","filteredUsers","clickedUser","onCloseClick","style","textAlign","company","name","catchPhrase","phone","href","website","UsersFilter","this","query","updateQuery","className","display","alignItems","width","top","left","transform","border","borderRadius","background","boxShadow","zIndex","htmlFor","padding","fontWeight","backgroundColor","type","autoFocus","autoComplete","placeholder","aria-required","value","onChange","fontSize","height","Component","App","state","fetchData","a","fetch","headers","then","response","json","data","setState","catch","error","console","log","e","target","trim","toggleisFiltered","keyCode","document","addEventListener","escFunction","bind","showingUsers","match","RegExp","escapeRegExp","filter","test","delay","setTimeout","prevState","clearTimeout","removeEventListener","googleMapURL","process","loadingElement","containerElement","mapElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.28a5a125.chunk.js","sourcesContent":["const MapStyles = [\n  {\n    featureType: 'all',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        saturation: 36,\n      },\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 40,\n      },\n    ],\n  },\n  {\n    featureType: 'all',\n    elementType: 'labels.text.stroke',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 16,\n      },\n    ],\n  },\n  {\n    featureType: 'all',\n    elementType: 'labels.icon',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'administrative',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 17,\n      },\n      {\n        weight: 1.2,\n      },\n    ],\n  },\n  {\n    featureType: 'landscape',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 21,\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 17,\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 29,\n      },\n      {\n        weight: 0.2,\n      },\n    ],\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 18,\n      },\n    ],\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 16,\n      },\n    ],\n  },\n  {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 19,\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 17,\n      },\n    ],\n  },\n];\n\nexport default MapStyles;\n","import React from 'react';\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow,\n} from 'react-google-maps';\n// import * as usersData from '../UsersData/data.json';\nimport MapStyles from '../mapStyles.js';\n\nconst Map = (props) => {\n  return (\n    <GoogleMap\n      defaultZoom={1}\n      defaultCenter={{\n        lat: 0,\n        lng: 0,\n      }}\n      defaultOptions={{ styles: MapStyles }}\n    >\n      {!props.isFiltered &&\n        props.users.map((user) => (\n          <Marker\n            key={user.id}\n            position={{\n              lat: parseFloat(user.address.geo.lat),\n              lng: parseFloat(user.address.geo.lng),\n            }}\n            onClick={() => {\n              props.setClickedUser(user);\n            }}\n            icon={{\n              url: 'logo.svg',\n              scaledSize: new window.google.maps.Size(45, 45),\n            }}\n          />\n        ))}\n      {props.isFiltered &&\n        props.filteredUsers.map((user) => (\n          <Marker\n            key={user.id}\n            position={{\n              lat: parseFloat(user.address.geo.lat),\n              lng: parseFloat(user.address.geo.lng),\n            }}\n            onClick={() => {\n              props.setClickedUser(user);\n            }}\n            icon={{\n              url: 'logo.svg',\n              scaledSize: new window.google.maps.Size(45, 45),\n            }}\n          />\n        ))}\n      {props.clickedUser && (\n        <InfoWindow\n          position={{\n            lat: parseFloat(props.clickedUser.address.geo.lat),\n            lng: parseFloat(props.clickedUser.address.geo.lng),\n          }}\n          onCloseClick={() => {\n            props.setClickedUser(null);\n          }}\n        >\n          <div style={{ textAlign: 'left' }}>\n            <h3>{props.clickedUser.company.name}</h3>\n            <p>\n              <i>Service:</i> {props.clickedUser.company.catchPhrase}\n            </p>\n            <p>\n              <i>Phone:</i> {props.clickedUser.phone}\n            </p>\n            <p>\n              <i>Webiste:</i>{' '}\n              <a href={'https://' + props.clickedUser.website}>\n                {props.clickedUser.website}\n              </a>\n            </p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n};\n\nconst MapModal = withScriptjs(withGoogleMap(Map));\n\nexport default MapModal;\n","import React, { Component } from 'react';\n\nclass UsersFilter extends Component {\n  render() {\n    const { query, updateQuery } = this.props;\n    return (\n      <div\n        className=\"users-list-container\"\n        style={{\n          position: 'absolute',\n          display: 'inline-flex',\n          alignItems: 'center',\n          width: '37%',\n          top: '3%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          border: 'none',\n          borderRadius: '2px',\n          background: '#fff',\n          boxShadow: '0 0 3px rgba(0, 0, 0, .3)',\n          zIndex: '1',\n        }}\n      >\n        <label\n          htmlFor=\"search\"\n          style={{\n            padding: '.5rem',\n            color: '#282c34',\n            fontWeight: 'bold',\n            backgroundColor: '#f7f7f7',\n          }}\n        >\n          Search\n        </label>{' '}\n        <input\n          id=\"search\"\n          className=\"list-filter\"\n          type=\"text\"\n          autoFocus\n          autoComplete=\"off\"\n          placeholder=\"search by company name...\"\n          aria-required=\"true\"\n          value={query}\n          onChange={updateQuery}\n          style={{\n            border: 'none',\n            fontSize: '.9rem',\n            padding: '.5rem',\n            width: 'calc(100% - 3rem)',\n            height: '1rem',\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default UsersFilter;\n","import React, { Component } from 'react';\nimport './App.css';\n// import MapModal from './MapModal/MapModalClassComponent.js';\nimport MapModal from './MapModal/MapModalFunctionComponent.js';\nimport UsersFilter from './UsersFilter/UsersFilterClassComponent.js';\n// import UsersFilter from './UsersFilter/UsersFilterFunctionComponent.js';\nimport escapeRegExp from 'escape-string-regexp';\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_KEY;\n\nclass App extends Component {\n  state = {\n    query: '',\n    users: [],\n    filteredUsers: [],\n    isFiltered: false,\n    clickedUser: null,\n  };\n\n  fetchData = async (url = '', data = []) => {\n    await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => this.setState({ users: data }))\n      .catch((error) => console.log(error));\n  };\n\n  setClickedUser(user) {\n    this.setState({\n      clickedUser: user,\n    });\n  }\n\n  escFunction(e) {\n    if (e.keyCode === 27) {\n      this.setState({\n        clickedUser: null,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData('https://jsonplaceholder.typicode.com/users');\n    document.addEventListener('keydown', this.escFunction.bind(this), false);\n  }\n\n  updateQuery = (e) => {\n    const value = e.target.value;\n    this.setState({ query: value.trim() });\n    this.toggleisFiltered();\n  };\n\n  componentDidUpdate() {\n    let showingUsers;\n    if (this.state.query) {\n      const match = new RegExp(escapeRegExp(this.state.query), 'i');\n      showingUsers = this.state.users.filter((user) =>\n        match.test(user.company.name)\n      );\n      if (!this.state.isFiltered) {\n        this.setState({\n          filteredUsers: showingUsers,\n          isFiltered: true,\n        });\n      }\n    }\n  }\n\n  toggleisFiltered() {\n    const delay = setTimeout(() => {\n      this.setState((prevState) => ({ isFiltered: !prevState.isFiltered }));\n    }, 750);\n    return function CleanUpTimeout() {\n      clearTimeout(delay);\n    };\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.escFunction.bind(this), false);\n  }\n\n  render() {\n    const { users, filteredUsers, isFiltered, clickedUser, query } = this.state;\n    return (\n      <div className=\"App\" style={{ width: '100vw', height: '100vh' }}>\n        <UsersFilter query={query} updateQuery={this.updateQuery.bind(this)} />\n        <MapModal\n          users={users}\n          filteredUsers={filteredUsers}\n          isFiltered={isFiltered}\n          clickedUser={clickedUser}\n          setClickedUser={this.setClickedUser.bind(this)}\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${API_KEY}`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `100%` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}